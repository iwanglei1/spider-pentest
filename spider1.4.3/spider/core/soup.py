# date: 2020/1/07 15:14
# author: liyong
import requests
from requests.adapters import HTTPAdapter
from bs4 import BeautifulSoup
from .const import failed_soup


class Soup(object):
    """创建soup对象"""
    user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) ' \
                 'Chrome/79.0.3945.88 Safari/537.36'
    req_header = {'User-Agent': user_agent, }
    _max_num = 9         # 最大重试次数 9次
    _conn_timeout = 10    # 链接超时时间 10秒
    _read_timeout = 20   # 读取超时时间 20秒
#添加了encoding字段用于确定最后返回的html文本格式
    def __init__(self, url, header=None,encoding=None):
        self.url = url
        self.header = header if header else self.req_header
        self.html = self.make_soup(encoding)

    def make_soup(self,encoding=None):
        """创建soup对象"""
        html = f'<div class="{failed_soup}">{failed_soup}</div>'
        try:
            html = self.__make_request(encoding)
        except Exception as er:
            print(f'\r* 尝试{self._max_num + 1}次链接{self.url}，均失败：{er}')
        return BeautifulSoup(html, 'lxml')

    def __make_request(self,encoding=None):
        """发出请求"""
        s = requests.Session()
        s.mount('http://', HTTPAdapter(max_retries=self._max_num))
        s.mount('https://', HTTPAdapter(max_retries=self._max_num))
        res = s.get(url=self.url, headers=self.header, timeout=(self._conn_timeout, self._read_timeout))
        if encoding:
            res.encoding=encoding
        return res.text
